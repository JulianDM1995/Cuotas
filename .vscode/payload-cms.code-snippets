{
  "payload_collection": {
    "prefix": "payload_collection",
    "description": "This is an awesome snippet created with EZSnippet.io!  ðŸš€ðŸ’»",
    "body": [
      "import type { CollectionConfig } from 'payload'",
      "",
      "export const ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}}: CollectionConfig = {",
      "  slug: '${2:${TM_FILENAME_BASE/(.*)/${1:/downcase}/}}',",
      "  admin: {",
      "    useAsTitle: 'name',",
      "  },",
      "  fields: [",
      "    {",
      "      type: 'text',",
      "      name: 'name',",
      "    },",
      "  ],",
      "}",
      ""
    ]
  },
  "payload_global": {
    "prefix": "payload_global",
    "description": "This is an awesome snippet created with EZSnippet.io!  ðŸš€ðŸ’»",
    "body": [
      "import { GlobalConfig } from 'payload'",
      "",
      "export const ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}}: GlobalConfig = {",
      "  slug: '${2:${TM_FILENAME_BASE/(.*)/${1:/downcase}/}}',",
      "  fields: [",
      "    {",
      "      type: 'text',",
      "      name: 'name',",
      "    },",
      "  ],",
      "}",
      ""
    ]
  },
  "payload_next_js_server_api": {
    "prefix": "payload_next_js_server_api",
    "description": "This is an awesome snippet created with EZSnippet.io!  ðŸš€ðŸ’»",
    "body": [
      "'use server'",
      "",
      "import configPromise from '@payload-config'",
      "import { getPayload } from 'payload'",
      "import { MarkOptional } from 'ts-essentials'",
      "import { ${2:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}} } from '../payload-types'",
      "",
      "export const create${2:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}} = async (${1:${TM_FILENAME_BASE/(.*)/${1:/downcase}/}}: MarkOptional<${2:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}}, 'createdAt' | 'id' | 'updatedAt'>) => {",
      "  const payload = await getPayload({",
      "    config: configPromise,",
      "  })",
      "  return await payload.create({",
      "    collection: '${1:${TM_FILENAME_BASE/(.*)/${1:/downcase}/}}',",
      "    data: ${1:${TM_FILENAME_BASE/(.*)/${1:/downcase}/}},",
      "  })",
      "}",
      "",
      "export const update${2:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}} = async (",
      "  id: string,",
      "  ${1:${TM_FILENAME_BASE/(.*)/${1:/downcase}/}}Updates: Partial<Omit<${2:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}}, 'id' | 'createdAt'>>,",
      ") => {",
      "  const payload = await getPayload({",
      "    config: configPromise,",
      "  })",
      "",
      "  return await payload.update({",
      "    collection: '${1:${TM_FILENAME_BASE/(.*)/${1:/downcase}/}}',",
      "    id,",
      "    data: ${1:${TM_FILENAME_BASE/(.*)/${1:/downcase}/}}Updates,",
      "  })",
      "}",
      "",
      "",
      "export const get${2:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}} = async (id: string) => {",
      "  const payload = await getPayload({",
      "    config: configPromise,",
      "  })",
      "",
      "  return await payload.findByID({",
      "    collection: '${1:${TM_FILENAME_BASE/(.*)/${1:/downcase}/}}',",
      "    id,",
      "  })",
      "}",
      "",
      "",
      "export const get${2:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}}s = async () => {",
      "  const payload = await getPayload({",
      "    config: configPromise,",
      "  })",
      "  return await payload.find({",
      "    collection: '${1:${TM_FILENAME_BASE/(.*)/${1:/downcase}/}}',",
      "  })",
      "}",
      "",
      "",
      "export const delete${2:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}} = async (id: string) => {",
      "  const payload = await getPayload({",
      "    config: configPromise,",
      "  })",
      "",
      "  return await payload.delete({",
      "    collection: '${1:${TM_FILENAME_BASE/(.*)/${1:/downcase}/}}',",
      "    id,",
      "  })",
      "}",
      ""
    ]
  }
}
